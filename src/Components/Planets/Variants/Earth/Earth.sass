@use "sass:math"
@import 'src/variables.module.sass'
@import 'src/Components/Planets/Planet.sass'
@import './Islands.sass'
@import "./rocket.sass"
@import "./Flags.sass"

.Earth
  display: flex
  justify-content: center
  align-items: center
  &__Clouds, &__Flags, &__Extra-Terrestrials
    display: contents
  &__Earth-Container
    z-index: 2 // Above all
    clip-path: circle(math.div($planet-diameter, 2) - math.div($layer-offset-remainder, 2) * 1vmin)
    .Planet--Earth
      &::before
        background: rgb(91, 161, 214)
        content: ''
        position: absolute
        width: 100%
        height: 100%
        border-radius: 50%
        transform: translateZ(1vmin) // unclear what the purpose of this is
      .Sphere
        animation: rotate-earth $earth-rotation-speed linear infinite
        .Land
          background-color: rgb(91, 214, 171)
  &__Extra-Terrestrials
    .Planet--Extra-Terrestrials
      position: absolute
      z-index: 2
      width: 80vmin
      height: 80vmin
      .Sphere
        animation: none
        transform: rotateY(-260deg)

@keyframes elevate-flag
  0%
    z-index: 2
  100%
    z-index: 1
@keyframes rotate-earth
  0%
    transform: rotateZ(-23.5deg) rotateX(0deg) rotateY(0deg)
  100%
    transform: rotateZ(-23.5deg) rotateX(0deg) rotateY(360deg)

$continents: map-get($earth, "continents")
$islands: map-keys($continents)
@each $island in $islands
  $props: map-get($continents, $island)
  @include gen-island($name: $island, $island-layers: map-get($props, "layers"), $island-diameter: map-get($props, "diameter"), $rotation: map-get($props, "rotation"), $z-rotation: map-get($props, "z-rotation"), $position: map-get($props, "position"))
