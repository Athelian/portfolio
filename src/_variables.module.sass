@use "sass:math"

// Arbitrary values
$total-possible-random-positions: 640 // number of (x,y) positions to pick from when placing land
$planet-diameter: 40

// Calculations
$planet-radius: math.div($planet-diameter, 2)
$planet-radius-squared: math.pow($planet-radius, 2)

$quadrant-boundary: math.div($total-possible-random-positions, 4) // x-y quadrant limits based on quarters of the total random possible positions
$first-quadrant-limit: $quadrant-boundary * 1
$second-quadrant-limit: $quadrant-boundary * 2
$third-quadrant-limit: $quadrant-boundary * 3

$nw_africa: (layers: 10, diameter: 15, rotation: 0, z-rotation: 18, position: 2)
$ne_africa: (layers: 10, diameter: 18, rotation: 0, z-rotation: -13, position: 0)
$c-africa: (layers: 10, diameter: 14, rotation: 0, z-rotation: -5, position: 192)
$s-africa: (layers: 15, diameter: 15, rotation: -8, z-rotation: -14, position: 247, components: 2)
$middle_east: (layers: 20, diameter: 13, rotation: 0, z-rotation: -35, position: 12)
$se_europe: (layers: 20, diameter: 10, rotation: 0, z-rotation: -13, position: 38)
$c_europe: (layers: 20, diameter: 13, rotation: 0, z-rotation: -4, position: 78, components: 2)
$earth: (nw_africa: $nw_africa, ne_africa: $ne_africa, c_africa: $c_africa, s_africa: $s_africa, middle_east: $middle_east, se_europe: $se_europe, c_europe: $c_europe)

@mixin rule($key, $value, $prefix)
  #{$prefix}-#{$key}: $value
@mixin internal-map-to-string($key1, $value, $prefix)
  @each $key, $value in $value
    @include rule($key, $value, #{$prefix + "-" + $key1})
@mixin map-to-string($map, $prefix)
  @each $key, $value in $map
    @include internal-map-to-string($key, $value, $prefix)

:export
  @include map-to-string($earth, "planet-earth")
