@use "sass:math"

// Arbitrary values
$total-possible-random-positions: 2560 // number of (x,y) positions to pick from when placing land
$planet-diameter: 42

// Calculations
$planet-radius: math.div($planet-diameter, 2)
$planet-radius-squared: math.pow($planet-radius, 2)

$quadrant-boundary: math.div($total-possible-random-positions, 4) // x-y quadrant limits based on quarters of the total random possible positions
$first-quadrant-limit: $quadrant-boundary * 1
$second-quadrant-limit: $quadrant-boundary * 2
$third-quadrant-limit: $quadrant-boundary * 3

$e-m: (layers: 30, diameter: 38, rotation: 5, z-rotation: 90, position: 312, components: 1)
$uk: (layers: 40, diameter: 6, rotation: 1, z-rotation: 36, position: 104, components: 2)
$russia: (layers: 20, diameter: 40, rotation: 18, z-rotation: -62, position: 288)

$africa: (layers: 80, diameter: 34, rotation: 0, z-rotation: 17, position: 1)
$asia: (layers: 80, diameter: 41, rotation: -5, z-rotation: -34, position: 1919)
$europe: (layers: 80, diameter: 24, rotation: 14, z-rotation: 10, position: 520, components: 8)

$nw_africa: (layers: 10, diameter: 14, rotation: -10, z-rotation: 17, position: 0)
$ne_africa: (layers: 10, diameter: 17, rotation: 0, z-rotation: -13, position: 0)
$c-africa: (layers: 10, diameter: 13, rotation: 0, z-rotation: -6, position: 186)
$s-africa: (layers: 15, diameter: 16, rotation: -4, z-rotation: -15, position: 233, components: 2)
$middle_east: (layers: 20, diameter: 12, rotation: 0, z-rotation: -28, position: 5)
$se_europe: (layers: 20, diameter: 9, rotation: 12, z-rotation: -12, position: 28)
$c_europe: (layers: 10, diameter: 12, rotation: 13, z-rotation: -8, position: 69, components: 2)
$w_europe: (layers: 30, diameter: 12, rotation: 8, z-rotation: 10, position: 88, components: 1)
// $earth: (africa: $africa, e_m: $e-m, uk: $uk, asia: $asia)
$earth: (africa: $africa, europe: $europe, asia: $asia)

@mixin rule($key, $value, $prefix)
  #{$prefix}-#{$key}: $value
@mixin internal-map-to-string($key1, $value, $prefix)
  @each $key, $value in $value
    @include rule($key, $value, #{$prefix + "-" + $key1})
@mixin map-to-string($map, $prefix)
  @each $key, $value in $map
    @include internal-map-to-string($key, $value, $prefix)

:export
  @include map-to-string($earth, "planet-earth")
