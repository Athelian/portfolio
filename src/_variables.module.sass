@use "sass:math"

// Arbitrary values
$layers-per-island: 30 // number of divs to stack on top of one another when creating an islanbd
$total-possible-random-positions: 160 // number of (x,y) positions to pick from when placing land
$planet-diameter: 40
$island-diameter: 28

// Calculations
$planet-radius: math.div($planet-diameter, 2)
$planet-radius-squared: math.pow($planet-radius, 2)

$quadrant-boundary: math.div($total-possible-random-positions, 4) // x-y quadrant limits based on quarters of the total random possible positions
$first-quadrant-limit: $quadrant-boundary * 1
$second-quadrant-limit: $quadrant-boundary * 2
$third-quadrant-limit: $quadrant-boundary * 3

$africa: (layers: 100, diameter: 26, rotation: 0)
$europe: (layers: 30, diameter: 21, rotation: 347)
$earth: (africa: $africa, europe: $europe)

@mixin rule($key, $value, $prefix)
  #{$prefix}-#{$key}: $value
@mixin internal-map-to-string($key1, $value, $prefix)
  @each $key, $value in $value
    @include rule($key, $value, #{$prefix + "-" + $key1})
@mixin map-to-string($map, $prefix)
  @each $key, $value in $map
    @include internal-map-to-string($key, $value, $prefix)

:export
  LAYERS_PER_ISLAND: $layers-per-island
  @include map-to-string($earth, "planet-earth")
